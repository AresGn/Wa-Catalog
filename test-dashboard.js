#!/usr/bin/env node
require('dotenv').config();

const botService = require('./admin/services/botService');

console.log('üß™ Test du Dashboard Bot\n');
console.log('‚ïê'.repeat(50));

async function testDashboard() {
  console.log('\nüìä R√©cup√©ration des stats pour le dashboard...');
  console.time('‚è±Ô∏è  Temps de chargement');
  
  try {
    const stats = await botService.getStats();
    console.timeEnd('‚è±Ô∏è  Temps de chargement');
    
    console.log('\n‚úÖ Stats r√©cup√©r√©es avec succ√®s!\n');
    
    console.log('üìà R√©sum√© des statistiques:');
    console.log(`   ‚Ä¢ Utilisateurs totaux: ${stats.totalUsers}`);
    console.log(`   ‚Ä¢ Actifs aujourd'hui: ${stats.activeToday}`);
    console.log(`   ‚Ä¢ Recherches totales: ${stats.totalSearches}`);
    console.log(`   ‚Ä¢ Recherches aujourd'hui: ${stats.searchesToday}`);
    console.log(`   ‚Ä¢ Clics totaux: ${stats.totalClicks}`);
    console.log(`   ‚Ä¢ Taux de conversion: ${stats.conversionRate}%`);
    console.log(`   ‚Ä¢ Temps de r√©ponse moyen: ${stats.avgResponseTime}ms`);
    
    console.log('\nüîç Top recherches:');
    const topSearches = Object.entries(stats.topSearches).slice(0, 5);
    if (topSearches.length > 0) {
      topSearches.forEach(([query, count], i) => {
        console.log(`   ${i + 1}. "${query}" - ${count} fois`);
      });
    } else {
      console.log('   Aucune recherche pour le moment');
    }
    
    console.log('\nüè™ Top vendeurs:');
    if (stats.topVendors.length > 0) {
      stats.topVendors.slice(0, 3).forEach((vendor, i) => {
        console.log(`   ${i + 1}. ${vendor.name} (${vendor.city}) - ${vendor.clicks} clics`);
      });
    } else {
      console.log('   Aucun vendeur pour le moment');
    }
    
    console.log('\nüìä Activit√© journali√®re (derniers 7 jours):');
    if (stats.dailyActivity.length > 0) {
      stats.dailyActivity.forEach(day => {
        console.log(`   ‚Ä¢ ${day.date}: ${day.searches} recherches, ${day.clicks} clics, ${day.users} utilisateurs`);
      });
    }
    
    console.log('\nüíö Le dashboard devrait maintenant fonctionner!');
    console.log('   Acc√©dez √† http://localhost:3000/bot pour voir les stats\n');
    
  } catch (error) {
    console.error('\n‚ùå Erreur lors de la r√©cup√©ration des stats:');
    console.error(error);
    
    console.log('\nüí° Solutions possibles:');
    console.log('   1. V√©rifiez que les tables sont cr√©√©es: npm run db:init-bot');
    console.log('   2. V√©rifiez les variables d\'environnement dans .env');
    console.log('   3. V√©rifiez la connexion √† Supabase');
  }
}

// Ex√©cuter le test
testDashboard().catch(console.error);
